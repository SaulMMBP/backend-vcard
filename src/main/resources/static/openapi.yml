openapi: '3.0.3'
info:
  title: Backend VCard
  description: REST API que permite crear tarjetas de presentación
  version: '1.0.0'
externalDocs:
  description: Github repository
  url: https://github.com/SaulMMBP/backend-vcard
servers:
  - url: http://backend-vcard-env.eba-iiyymghu.us-east-2.elasticbeanstalk.com
  - url: http://localhost:8080
security:
  - BearerAuth: []  
paths:
  /{userId}/contacts:
    get:
      summary: Obtiene todos los contactos de un usuario
      parameters:
        - $ref: "#/components/parameters/userId"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/size"
        - $ref: "#/components/parameters/sort"
      responses:
        '200':
          description: OK
          $ref: "#/components/responses/contacts"
        '403':
          description: FORBIDDEN
      tags:
        - Contact
    post:
      summary: Crea un contacto para un usuario
      parameters:
        - $ref: "#/components/parameters/userId"
      requestBody:
        $ref: "#/components/requestBodies/contact"
      responses:
        '201':
          description: CREATED
          $ref: "#/components/responses/contact"
        '400':
          description: BAD REQUEST
          $ref: "#/components/responses/ErrorDetails"
        '401':
          description: UNAUTHORIZED
          $ref: "#/components/responses/ErrorDetails"
        '403':
          description: FORBIDDEN
        '404':
          description: USER NOT FOUND
          $ref: "#/components/responses/ErrorDetails"
      tags:
        - Contact
  /{userId}/contacts/{contactId}:
    get:
      summary: Obtiene un contacto de un usuario
      parameters:
        - $ref: "#/components/parameters/userId"
        - $ref: "#/components/parameters/contactId"
      responses:
        '200':
          description: OK
          $ref: "#/components/responses/contact"
        '401':
          description: UNAUTHORIZED
          $ref: "#/components/responses/ErrorDetails"
        '403':
          description: FORBIDDEN
        '404':
          description: NOT FOUND
          $ref: "#/components/responses/ErrorDetails"
      tags:
        - Contact
    put:
      summary: Actualiza un contacto de un usuario
      parameters:
        - $ref: "#/components/parameters/userId"
        - $ref: "#/components/parameters/contactId"
      requestBody:
        $ref: "#/components/requestBodies/contact"
      responses:
        '200':
          description: OK
          $ref: "#/components/responses/contact"
        '400':
          description: BAD REQUEST
          $ref: "#/components/responses/ErrorDetails"
        '401':
          description: UNAUTHORIZED
          $ref: "#/components/responses/ErrorDetails"
        '403':
          description: FORBIDDEN
        '404':
          description: NOT FOUND ó USER NOT FOUND
          $ref: "#/components/responses/ErrorDetails"
      tags:
        - Contact
    delete:
      summary: Elimina el contacto de un usuario
      parameters:
        - $ref: "#/components/parameters/userId"
        - $ref: "#/components/parameters/contactId"
      responses:
        '204':
          description: NO CONTENT
        '401':
          description: UNAUTHORIZED
          $ref: "#/components/responses/ErrorDetails"
        '403':
          description: FORBIDDEN
        '404':
          description: NOT FOUND ó USER NOT FOUND
          $ref: "#/components/responses/ErrorDetails"
      tags:
        - Contact
  /{userId}/vcards:
    post:
      summary: Crea una nueva vcard para el usuario
      parameters:
        - $ref: "#/components/parameters/userId"
      requestBody:
        $ref: "#/components/requestBodies/vcard"
      responses:
        '201':
          description: CREATED
          $ref: "#/components/responses/vcard"
        '400':
          description: BAD REQUEST
          $ref: "#/components/responses/ErrorDetails"
        '401':
          description: UNAUTHORIZED
          $ref: "#/components/responses/ErrorDetails"
        '403':
          description: FORBIDDEN
        '404':
          description: USER NOT FOUND
          $ref: "#/components/responses/ErrorDetails"
      tags:
        - VCard
    get:
      summary: Obtiene todos los vcards de un usuario
      parameters:
        - $ref: "#/components/parameters/userId"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/size"
        - $ref: "#/components/parameters/sort"
      responses:
        '200':
          description: OK
          $ref: "#/components/responses/vcards"
        '403':
          description: FORBIDDEN
      tags:
        - VCard
  /{userId}/vcards/{vcardId}:
    get:
      summary: Obtiene un vcard de un usuario
      parameters:
        - $ref: "#/components/parameters/userId"
        - $ref: "#/components/parameters/vcardId"
      responses:
        '200':
          description: OK
          $ref: "#/components/responses/vcard"
        '401':
          description: UNAUTHORIZED
          $ref: "#/components/responses/ErrorDetails"
        '403':
          description: FORBIDDEN
        '404':
          description: NOT FOUND
          $ref: "#/components/responses/ErrorDetails"
      tags:
        - VCard
    put:
      summary: Actualiza un vcard de un usuario
      parameters:
        - $ref: "#/components/parameters/userId"
        - $ref: "#/components/parameters/vcardId"
      requestBody:
        $ref: "#/components/requestBodies/vcard"
      responses:
        '200':
          description: OK
          $ref: "#/components/responses/vcard"
        '400':
          description: BAD REQUEST
          $ref: "#/components/responses/ErrorDetails"
        '401':
          description: UNAUTHORIZED
          $ref: "#/components/responses/ErrorDetails"
        '403':
          description: FORBIDDEN
        '404':
          description: NOT FOUND ó USER NOT FOUND
          $ref: "#/components/responses/ErrorDetails"
      tags:
        - VCard
    delete:
      summary: Elimina el vcard de un usuario
      parameters:
        - $ref: "#/components/parameters/userId"
        - $ref: "#/components/parameters/vcardId"
      responses:
        '204':
          description: NO CONTENT
        '401':
          description: UNAUTHORIZED
          $ref: "#/components/responses/ErrorDetails"
        '403':
          description: FORBIDDEN
        '404':
          description: NOT FOUND ó USER NOT FOUND
          $ref: "#/components/responses/ErrorDetails"
      tags:
        - VCard
  /{userId}/vcards/{vcardId}/qr:
    get:
      summary: Descarga un png del qr de una vcard
      parameters:
        - $ref: "#/components/parameters/userId"
        - $ref: "#/components/parameters/vcardId"
      responses:
        '200':
          description: OK
          content:
            image/png:
              schema:
                type: string
                format: binary
        '401':
          description: UNAUTHORIZED
          $ref: "#/components/responses/ErrorDetails"
        '403':
          description: FORBIDDEN
        '404':
          description: NOT FOUND ó USER NOT FOUND
          $ref: "#/components/responses/ErrorDetails"
      tags:
        - VCard
  /{userId}/summary:
    get:
      summary: Obtiene el total de contactos y vcards del usuario
      parameters:
        - $ref: "#/components/parameters/userId"
      responses:
        '200':
          description: OK
          $ref: "#/components/responses/summary"
        '401':
          description: UNAUTHORIZED
          $ref: "#/components/responses/ErrorDetails"
        '403':
          description: FORBIDDEN
        '404':
          description: USER NOT FOUND
          $ref: "#/components/responses/ErrorDetails"
      tags:
        - Summary
components:
  parameters:
    vcardId:
      name: vcardId
      description: Id de vcard
      in: path
      schema:
        type: integer
      required: true
    contactId:
      name: contactId
      description: Id de contacto
      in: path
      schema:
        type: integer
      required: true
    userId:
      name: userId
      description: Id de usuario
      in: path
      schema: 
        type: string
      required: true
    page:
      name: page
      description: Número de página
      in: query
      schema:
        type: integer
        default: 0
      required: false
    size:
      name: size
      description: Número de elementos a obtener por página
      in: query
      schema:
        type: integer
        default: 10
      required: false
    sort:
      name: sort
      description: Orden de los elementos del paginado
      example: sort=name,asc
      in: query
      schema:
        type: string
      required: false
    authorization:
      name: Authorization
      in: header
      schema:
        type: string
  schemas:
    ErrorDetails:
      type: object
      properties:
        timestamp:
          type: string
        message:
          type: string
        messages:
          type: array
          items:
            type: object
          example: { Field: 'message error' }
        details:
          type: string
    _links:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
    page:
      type: object
      properties:
        size:
          type: integer
        totalElements:
          type: integer
        totalPages:
          type: integer
        number:
          type: integer
    contacts:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            contacts:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  userId:
                    type: string
                  identifier:
                    type: string
                  name:
                    type: string
                  email:
                    type: string
                  position:
                    type: string
                  company:
                    type: string
                  web: 
                    type: string
                  phones:
                    type: array
                    items:
                      type: string
                  _links:
                    $ref: "#/components/schemas/_links"
        _links:
          $ref: "#/components/schemas/_links"
        page:
          $ref: "#/components/schemas/page"
    contactResponse:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        identifier:
          type: string
        name:
          type: string
        email:
          type: string
        position:
          type: string
        company:
          type: string
        web: 
          type: string
        phones:
          type: array
          items:
            type: string
    contactRequest:
      type: object
      properties:
        identifier:
          type: string
        name:
          type: string
        email:
          type: string
        position:
          type: string
        company:
          type: string
        web: 
          type: string
        phones:
          type: array
          items:
            type: string
      required:
        - "identifier"
        - "name"
        - "phones"
    vcardResponse:
      type: object
      properties:
        id:
          type: integer
        userId:
          type: string
        name:
          type: string
        color:
          type: string
        contact:
          $ref: "#/components/schemas/contactResponse"
    vcardRequest:
      type: object
      properties:
        name:
          type: string
        color:
          type: string
        contactId:
          type: integer
      required:
        - name
        - contactId
    vcards:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            vcards:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  userId:
                    type: string
                  name:
                    type: string
                  color:
                    type: string
                  contact:
                    $ref: "#/components/schemas/contactResponse"
                  _links:
                    $ref: "#/components/schemas/_links"
        _links:
          $ref: "#/components/schemas/_links"
        page:
          $ref: "#/components/schemas/page"
    summaryResponse:
      type: object
      properties:
        contactsTotal:
          type: integer
        cardsTotal:
          type: integer
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  requestBodies:
    contact:
      description: Request para crear o actualizar contacto
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/contactRequest"
    vcard:
      description: Request para crear o actualizar vcard
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/vcardRequest"            
  responses:
    ErrorDetails:
      description: Response de detalles de error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorDetails"
    contacts:
      description: Response de contactos paginados
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/contacts"
    contact:
      description: Response de contacto
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/contactResponse"
    vcards:
      description: Response de contactos paginados
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/vcards"
    vcard:
      description: Response de contato
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/vcardResponse"
    summary:
      description: Response de summary
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/summaryResponse"
            
  